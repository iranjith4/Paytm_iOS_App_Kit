{\rtf1\ansi\ansicpg1252\cocoartf1343\cocoasubrtf160
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\fs24 \cf0 The project file has 3 targets\
\
1. 
\b PaymentMerchantApp
\b0  - This is the sample merchant app that uses the libPaymentsSDK library. This target has a target dependency on the PaymentsSDK target. So when the app is built the library gets built first. \
\
2. 
\b PaymentsSDK
\b0  - This is the library target that builds the library. Because it can be built in Simulator and device modes the product names that are created differ in the name. But the merchant app expects the library to have a common name. So this target uses run scripts to have two copies of the library. One using the original product name that contains the iPhoneSimulator or iphonesos suffix in the built library depending on which is contained and other is a copy that is renamed to libPaymentsSDK.a. This is done so that the merchant app can build properly irrespective of the order in which the targets are built.\
\
3. 
\b LipoTheLibs
\b0  - This is a an aggregate target which combines the simulator and iphone os library for distribution purpose. Before build this you have to build the PaymentsSDK target in simulator and device mode so that the two libraries are created. The scripts in this target will then use the lipo command to merge the two libraries into a single libPaymentsSDK.a library. This is the library that has to be distributed since it contain all architectures. }